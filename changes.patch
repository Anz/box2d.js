diff --git a/javascript/Box2D/Collision/b2AABB.js b/javascript/Box2D/Collision/b2AABB.js
index 0f21185..5d316c9 100644
--- a/javascript/Box2D/Collision/b2AABB.js
+++ b/javascript/Box2D/Collision/b2AABB.js
@@ -35,11 +35,11 @@ b2AABB.prototype.GetExtents = function () {
 		 (this.upperBound.y - this.lowerBound.y) / 2);
 	}
 b2AABB.prototype.Contains = function (aabb) {
-		var result = true;
-		result &&= this.lowerBound.x <= aabb.lowerBound.x;
-		result &&= this.lowerBound.y <= aabb.lowerBound.y;
-		result &&= aabb.upperBound.x <= this.upperBound.x;
-		result &&= aabb.upperBound.y <= this.upperBound.y;
+		var result = true
+			&& (this.lowerBound.x <= aabb.lowerBound.x)
+			&& (this.lowerBound.y <= aabb.lowerBound.y)
+			&& (aabb.upperBound.x <= this.upperBound.x)
+			&& (aabb.upperBound.y <= this.upperBound.y);
 		return result;
 	}
 b2AABB.prototype.RayCast = function (output, input) {
diff --git a/javascript/Box2D/Collision/b2DistanceProxy.js b/javascript/Box2D/Collision/b2DistanceProxy.js
index 24a4ebd..47729dd 100644
--- a/javascript/Box2D/Collision/b2DistanceProxy.js
+++ b/javascript/Box2D/Collision/b2DistanceProxy.js
@@ -18,7 +18,7 @@ b2DistanceProxy.prototype.Set = function (shape) {
 				case b2Shape.e_circleShape:
 				{
 					var circle = shape;
-					this.m_vertices = new Array(1, true);
+					this.m_vertices = new Array(1);
 					this.m_vertices[0] = circle.m_p;
 					this.m_count = 1;
 					this.m_radius = circle.m_radius;
diff --git a/javascript/Box2D/Common/Math/b2Vec2.js b/javascript/Box2D/Common/Math/b2Vec2.js
index 74b1e84..291f692 100644
--- a/javascript/Box2D/Common/Math/b2Vec2.js
+++ b/javascript/Box2D/Common/Math/b2Vec2.js
@@ -1,9 +1,7 @@
-var b2Vec2 = function() {
-this.__varz();
-this.__constructor.apply(this, arguments);
+var b2Vec2 = function(x_, y_) {
+    if(arguments.length == 2) {
+        this.x=x_; this.y=y_;
 }
-b2Vec2.prototype.__constructor = function (x_, y_) {this.x=x_; this.y=y_;}
-b2Vec2.prototype.__varz = function(){
 }
 // static attributes
 // static methods
@@ -11,8 +9,8 @@ b2Vec2.Make = function (x_, y_) {
 		return new b2Vec2(x_, y_);
 	}
 // attributes
-b2Vec2.prototype.x =  null;
-b2Vec2.prototype.y =  null;
+b2Vec2.prototype.x =  0;
+b2Vec2.prototype.y =  0;
 // methods
 b2Vec2.prototype.SetZero = function () { this.x = 0.0; this.y = 0.0; }
 b2Vec2.prototype.Set = function (x_, y_) {this.x=x_; this.y=y_;}
diff --git a/javascript/Box2D/Common/Math/b2Vec3.js b/javascript/Box2D/Common/Math/b2Vec3.js
index aeb1a5c..f9c01e9 100644
--- a/javascript/Box2D/Common/Math/b2Vec3.js
+++ b/javascript/Box2D/Common/Math/b2Vec3.js
@@ -1,28 +1,24 @@
-var b2Vec3 = function() {
-this.__varz();
-this.__constructor.apply(this, arguments);
-}
-b2Vec3.prototype.__constructor = function (this.x , this.y , this.z ) {
-		this.x = this.x;
-		this.y = this.y;
-		this.z = this.z;
-	}
-b2Vec3.prototype.__varz = function(){
+var b2Vec3 = function(x, y, z) {
+	if(arguments.length == 3) {
+		this.x=x; this.y=y; this.z=z;
+	}	
 }
+
 // static attributes
 // static methods
 // attributes
-b2Vec3.prototype.x =  null;
-b2Vec3.prototype.y =  null;
-b2Vec3.prototype.z =  null;
+b2Vec3.prototype.x =  0;
+b2Vec3.prototype.y =  0;
+b2Vec3.prototype.z =  0;
+
 // methods
 b2Vec3.prototype.SetZero = function () {
 		this.x = this.y = this.z = 0.0;
 	}
-b2Vec3.prototype.Set = function (this.x, this.y, this.z) {
-		this.x = this.x;
-		this.y = this.y;
-		this.z = this.z;
+b2Vec3.prototype.Set = function (x, y, z) {
+		this.x = x;
+		this.y = y;
+		this.z = z;
 	}
 b2Vec3.prototype.SetV = function (v) {
 		this.x = v.x;
diff --git a/javascript/Box2D/Collision/Features.js b/javascript/Box2D/Collision/Features.js
index 6ed71c9..6cb4a8e 100644
--- a/javascript/Box2D/Collision/Features.js
+++ b/javascript/Box2D/Collision/Features.js
@@ -8,32 +8,37 @@ Features.prototype.__varz = function(){
 // static attributes
 // static methods
 // attributes
+Features.prototype._referenceEdge =  0;
+Features.prototype._incidentEdge =  0;
+Features.prototype._incidentVertex =  0;
+Features.prototype._flip =  0;
+Features.prototype._m_id =  null;
 // methods
-Features.prototype.get = function () {
-		return _referenceEdge;
-	}
-Features.prototype.set = function (value) {
-		_referenceEdge = value;
-		_m_id._key = (_m_id._key & 0xffffff00) | (_referenceEdge & 0x000000ff);
-	}
-Features.prototype.get = function () {
-		return _incidentEdge;
-	}
-Features.prototype.set = function (value) {
-		_incidentEdge = value;
-		_m_id._key = (_m_id._key & 0xffff00ff) | ((_incidentEdge << 8) & 0x0000ff00);
-	}
-Features.prototype.get = function () {
-		return _incidentVertex;
-	}
-Features.prototype.set = function (value) {
-		_incidentVertex = value;
-		_m_id._key = (_m_id._key & 0xff00ffff) | ((_incidentVertex << 16) & 0x00ff0000);
-	}
-Features.prototype.get = function () {
-		return _flip;
-	}
-Features.prototype.set = function (value) {
-		_flip = value;
-		_m_id._key = (_m_id._key & 0x00ffffff) | ((_flip << 24) & 0xff000000);
-	}
\ No newline at end of file
+Features.prototype.__defineGetter__("referenceEdge", function() {
+        return this._referenceEdge;
+    });   
+Features.prototype.__defineSetter__("referenceEdge", function(value) {
+        this._referenceEdge = value;
+        this._m_id._key = (this._m_id._key & 0xffffff00) | (this._referenceEdge & 0x000000ff);
+    });
+Features.prototype.__defineGetter__("incidentEdge", function() {
+        return this._incidentEdge;
+    });
+Features.prototype.__defineSetter__("incidentEdge", function(value) {
+        this._incidentEdge = value;
+        this._m_id._key = (this._m_id._key & 0xffff00ff) | ((this._incidentEdge << 8) & 0x0000ff00);
+    });
+Features.prototype.__defineGetter__("incidentVertex", function() {
+        return this._incidentVertex;
+    });
+Features.prototype.__defineSetter__("incidentVertex", function(value) {
+        this._incidentVertex = value;
+        this._m_id._key = (this._m_id._key & 0xff00ffff) | ((this._incidentVertex << 16) & 0x00ff0000);
+    });
+Features.prototype.__defineGetter__("flip", function() {
+        return this._flip;
+    });
+Features.prototype.__defineSetter__("flip", function(value) {
+        this._flip = value;
+        this._m_id._key = (this._m_id._key & 0x00ffffff) | ((this._flip << 24) & 0xff000000);
+    });
\ No newline at end of file
diff --git a/javascript/Box2D/Collision/b2ContactID.js b/javascript/Box2D/Collision/b2ContactID.js
index a31369e..b5c3e71 100644
--- a/javascript/Box2D/Collision/b2ContactID.js
+++ b/javascript/Box2D/Collision/b2ContactID.js
@@ -13,6 +13,7 @@ this.features =  new Features();
 // static methods
 // attributes
 b2ContactID.prototype.features =  new Features();
+b2ContactID.prototype._key =  0;
 // methods
 b2ContactID.prototype.Set = function (id) {
 		key = id._key;
@@ -22,13 +23,13 @@ b2ContactID.prototype.Copy = function () {
 		id.key = key;
 		return id;
 	}
-b2ContactID.prototype.get = function () {
-		return _key;
-	}
-b2ContactID.prototype.set = function (value) {
-		_key = value;
-		this.features._referenceEdge = _key & 0x000000ff;
-		this.features._incidentEdge = ((_key & 0x0000ff00) >> 8) & 0x000000ff;
-		this.features._incidentVertex = ((_key & 0x00ff0000) >> 16) & 0x000000ff;
-		this.features._flip = ((_key & 0xff000000) >> 24) & 0x000000ff;
-	}
\ No newline at end of file
+b2ContactID.prototype.__defineSetter__("key", function () {
+        return this._key;
+    });
+b2ContactID.prototype.__defineSetter__("key", function(value) { 
+		this._key = value;
+		this.features._referenceEdge = this._key & 0x000000ff;
+		this.features._incidentEdge = ((this._key & 0x0000ff00) >> 8) & 0x000000ff;
+		this.features._incidentVertex = ((this._key & 0x00ff0000) >> 16) & 0x000000ff;
+		this.features._flip = ((this._key & 0xff000000) >> 24) & 0x000000ff;
+    });
\ No newline at end of file
diff --git a/javascript/Box2D/Common/b2Color.js b/javascript/Box2D/Common/b2Color.js
index c0ea9c9..dbd2dcb 100644
--- a/javascript/Box2D/Common/b2Color.js
+++ b/javascript/Box2D/Common/b2Color.js
@@ -21,15 +21,16 @@ b2Color.prototype.Set = function (rr, gg, bb) {
 		this._g = parseInt(255 * b2Math.Clamp(gg, 0.0, 1.0));
 		this._b = parseInt(255 * b2Math.Clamp(bb, 0.0, 1.0));
 	}
-b2Color.prototype.set = function (rr) {
+	
+b2Color.prototype.__defineSetter__("r", function(rr) {
 		this._r = parseInt(255 * b2Math.Clamp(rr, 0.0, 1.0));
-	}
-b2Color.prototype.set = function (gg) {
+	});
+b2Color.prototype.__defineSetter__("g", function(gg) {
 		this._g = parseInt(255 * b2Math.Clamp(gg, 0.0, 1.0));
-	}
-b2Color.prototype.set = function (bb) {
+	});
+b2Color.prototype.__defineSetter__("b", function(bb) {
 		this._b = parseInt(255 * b2Math.Clamp(bb, 0.0, 1.0));
-	}
-b2Color.prototype.get = function () {
+	});
+b2Color.prototype.__defineGetter__("color", function() {
 		return (this._r << 16) | (this._g << 8) | (this._b);
-	}
\ No newline at end of file
+	});
\ No newline at end of file
