diff --git a/javascript/Box2D/Collision/Features.js b/javascript/Box2D/Collision/Features.js
index d0d5427..4b83af8 100644
--- a/javascript/Box2D/Collision/Features.js
+++ b/javascript/Box2D/Collision/Features.js
@@ -8,37 +8,37 @@ Features.prototype.__varz = function(){
 // static methods
 // static attributes
 // methods
-Features.prototype.get = function () {
+Features.prototype.__defineGetter__("referenceEdge", function() {
 		return this._referenceEdge;
-	}
-Features.prototype.set = function (value) {
+    });   
+Features.prototype.__defineSetter__("referenceEdge", function(value) {
 		this._referenceEdge = value;
 		this._m_id._key = (this._m_id._key & 0xffffff00) | (this._referenceEdge & 0x000000ff);
-	}
-Features.prototype.get = function () {
+    });
+Features.prototype.__defineGetter__("incidentEdge", function() {
 		return this._incidentEdge;
-	}
-Features.prototype.set = function (value) {
+    });
+Features.prototype.__defineSetter__("incidentEdge", function(value) {
 		this._incidentEdge = value;
 		this._m_id._key = (this._m_id._key & 0xffff00ff) | ((this._incidentEdge << 8) & 0x0000ff00);
-	}
-Features.prototype.get = function () {
+    });
+Features.prototype.__defineGetter__("incidentVertex", function() {
 		return this._incidentVertex;
-	}
-Features.prototype.set = function (value) {
+    });
+Features.prototype.__defineSetter__("incidentVertex", function(value) {
 		this._incidentVertex = value;
 		this._m_id._key = (this._m_id._key & 0xff00ffff) | ((this._incidentVertex << 16) & 0x00ff0000);
-	}
-Features.prototype.get = function () {
+    });
+Features.prototype.__defineGetter__("flip", function() {
 		return this._flip;
-	}
-Features.prototype.set = function (value) {
+    });
+Features.prototype.__defineSetter__("flip", function(value) {
 		this._flip = value;
 		this._m_id._key = (this._m_id._key & 0x00ffffff) | ((this._flip << 24) & 0xff000000);
-	}
+    });
 // attributes
 Features.prototype._referenceEdge =  0;
 Features.prototype._incidentEdge =  0;
 Features.prototype._incidentVertex =  0;
 Features.prototype._flip =  0;
-Features.prototype._m_id =  null;
\ No newline at end of file
+Features.prototype._m_id =  null;    
\ No newline at end of file
diff --git a/javascript/Box2D/Collision/b2AABB.js b/javascript/Box2D/Collision/b2AABB.js
index e8fadd5..acc53c0 100644
--- a/javascript/Box2D/Collision/b2AABB.js
+++ b/javascript/Box2D/Collision/b2AABB.js
@@ -32,11 +32,11 @@ b2AABB.prototype.GetExtents = function () {
 		 (this.upperBound.y - this.lowerBound.y) / 2);
 	}
 b2AABB.prototype.Contains = function (aabb) {
-		var result = true;
-		result &&= this.lowerBound.x <= aabb.lowerBound.x;
-		result &&= this.lowerBound.y <= aabb.lowerBound.y;
-		result &&= aabb.upperBound.x <= this.upperBound.x;
-		result &&= aabb.upperBound.y <= this.upperBound.y;
+		var result = true
+			&& (this.lowerBound.x <= aabb.lowerBound.x)
+			&& (this.lowerBound.y <= aabb.lowerBound.y)
+			&& (aabb.upperBound.x <= this.upperBound.x)
+			&& (aabb.upperBound.y <= this.upperBound.y);
 		return result;
 	}
 b2AABB.prototype.RayCast = function (output, input) {
diff --git a/javascript/Box2D/Collision/b2ContactID.js b/javascript/Box2D/Collision/b2ContactID.js
index 8d5fe00..4b26afd 100644
--- a/javascript/Box2D/Collision/b2ContactID.js
+++ b/javascript/Box2D/Collision/b2ContactID.js
@@ -20,16 +20,16 @@ b2ContactID.prototype.Copy = function () {
 		id.key = key;
 		return id;
 	}
-b2ContactID.prototype.get = function () {
+b2ContactID.prototype.__defineSetter__("key", function () {
 		return this._key;
-	}
-b2ContactID.prototype.set = function (value) {
+    });
+b2ContactID.prototype.__defineSetter__("key", function(value) { 
 		this._key = value;
 		this.features._referenceEdge = this._key & 0x000000ff;
 		this.features._incidentEdge = ((this._key & 0x0000ff00) >> 8) & 0x000000ff;
 		this.features._incidentVertex = ((this._key & 0x00ff0000) >> 16) & 0x000000ff;
 		this.features._flip = ((this._key & 0xff000000) >> 24) & 0x000000ff;
-	}
+    });
 // attributes
 b2ContactID.prototype._key =  0;
 b2ContactID.prototype.features =  new Features();
\ No newline at end of file
diff --git a/javascript/Box2D/Collision/b2DistanceProxy.js b/javascript/Box2D/Collision/b2DistanceProxy.js
index eb06178..1cb2d4f 100644
--- a/javascript/Box2D/Collision/b2DistanceProxy.js
+++ b/javascript/Box2D/Collision/b2DistanceProxy.js
@@ -14,7 +14,7 @@ b2DistanceProxy.prototype.Set = function (shape) {
 				case b2Shape.e_circleShape:
 				{
 					var circle = shape;
-					this.m_vertices = new Array(1, true);
+					this.m_vertices = new Array(1);
 					this.m_vertices[0] = circle.m_p;
 					this.m_count = 1;
 					this.m_radius = circle.m_radius;
diff --git a/javascript/Box2D/Common/Math/b2Vec2.js b/javascript/Box2D/Common/Math/b2Vec2.js
index e94ec27..8c56b7e 100644
--- a/javascript/Box2D/Common/Math/b2Vec2.js
+++ b/javascript/Box2D/Common/Math/b2Vec2.js
@@ -1,9 +1,7 @@
-var b2Vec2 = function() {
-this.__varz();
-this.__constructor.apply(this, arguments);
+var b2Vec2 = function(x_, y_) {
+    if(arguments.length == 2) {
+        this.x=x_; this.y=y_;
 }
-b2Vec2.prototype.__constructor = function (x_, y_) {this.x=x_; this.y=y_;}
-b2Vec2.prototype.__varz = function(){
 }
 // static methods
 b2Vec2.Make = function (x_, y_) {
@@ -82,5 +80,5 @@ b2Vec2.prototype.IsValid = function () {
 		return b2Math.IsValid(this.x) && b2Math.IsValid(this.y);
 	}
 // attributes
-b2Vec2.prototype.x =  null;
-b2Vec2.prototype.y =  null;
\ No newline at end of file
+b2Vec2.prototype.x =  0;
+b2Vec2.prototype.y =  0;
\ No newline at end of file
diff --git a/javascript/Box2D/Common/Math/b2Vec3.js b/javascript/Box2D/Common/Math/b2Vec3.js
index fcc66f2..c5aa7af 100644
--- a/javascript/Box2D/Common/Math/b2Vec3.js
+++ b/javascript/Box2D/Common/Math/b2Vec3.js
@@ -1,13 +1,7 @@
-var b2Vec3 = function() {
-this.__varz();
-this.__constructor.apply(this, arguments);
+var b2Vec3 = function(x, y, z) {
+	if(arguments.length == 3) {
+		this.x=x; this.y=y; this.z=z;
 }
-b2Vec3.prototype.__constructor = function (this.x , this.y , this.z ) {
-		this.x = this.x;
-		this.y = this.y;
-		this.z = this.z;
-	}
-b2Vec3.prototype.__varz = function(){
 }
 // static methods
 // static attributes
@@ -15,10 +9,10 @@ b2Vec3.prototype.__varz = function(){
 b2Vec3.prototype.SetZero = function () {
 		this.x = this.y = this.z = 0.0;
 	}
-b2Vec3.prototype.Set = function (this.x, this.y, this.z) {
-		this.x = this.x;
-		this.y = this.y;
-		this.z = this.z;
+b2Vec3.prototype.Set = function (x, y, z) {
+		this.x = x;
+		this.y = y;
+		this.z = z;
 	}
 b2Vec3.prototype.SetV = function (v) {
 		this.x = v.x;
@@ -40,6 +34,6 @@ b2Vec3.prototype.Multiply = function (a) {
 		this.x *= a; this.y *= a; this.z *= a;
 	}
 // attributes
-b2Vec3.prototype.x =  null;
-b2Vec3.prototype.y =  null;
-b2Vec3.prototype.z =  null;
\ No newline at end of file
+b2Vec3.prototype.x =  0;
+b2Vec3.prototype.y =  0;
+b2Vec3.prototype.z =  0;
\ No newline at end of file
diff --git a/javascript/Box2D/Common/b2Color.js b/javascript/Box2D/Common/b2Color.js
index 2034474..38c3c8d 100644
--- a/javascript/Box2D/Common/b2Color.js
+++ b/javascript/Box2D/Common/b2Color.js
@@ -17,18 +17,19 @@ b2Color.prototype.Set = function (rr, gg, bb) {
 		this._g = parseInt(255 * b2Math.Clamp(gg, 0.0, 1.0));
 		this._b = parseInt(255 * b2Math.Clamp(bb, 0.0, 1.0));
 	}
-b2Color.prototype.set = function (rr) {
+	
+b2Color.prototype.__defineSetter__("r", function(rr) {
 		this._r = parseInt(255 * b2Math.Clamp(rr, 0.0, 1.0));
-	}
-b2Color.prototype.set = function (gg) {
+	});
+b2Color.prototype.__defineSetter__("g", function(gg) {
 		this._g = parseInt(255 * b2Math.Clamp(gg, 0.0, 1.0));
-	}
-b2Color.prototype.set = function (bb) {
+	});
+b2Color.prototype.__defineSetter__("b", function(bb) {
 		this._b = parseInt(255 * b2Math.Clamp(bb, 0.0, 1.0));
-	}
-b2Color.prototype.get = function () {
+	});
+b2Color.prototype.__defineGetter__("color", function() {
 		return (this._r << 16) | (this._g << 8) | (this._b);
-	}
+	});
 // attributes
 b2Color.prototype._r =  0;
 b2Color.prototype._g =  0;
diff --git a/javascript/Box2D/Collision/b2DynamicTreeBroadPhase.js b/javascript/Box2D/Collision/b2DynamicTreeBroadPhase.js
index e990ced..c2ca788 100644
--- a/javascript/Box2D/Collision/b2DynamicTreeBroadPhase.js
+++ b/javascript/Box2D/Collision/b2DynamicTreeBroadPhase.js
@@ -61,6 +61,7 @@ b2DynamicTreeBroadPhase.prototype.UpdatePairs = function (callback) {
 		
 		for(var i=0, queryProxy=null;i<this.m_moveBuffer.length, queryProxy=this.m_moveBuffer[i]; i++)
 		{
+			var that = this;
 			function QueryCallback(proxy)
 			{
 				
@@ -68,15 +69,15 @@ b2DynamicTreeBroadPhase.prototype.UpdatePairs = function (callback) {
 					return true;
 					
 				
-				if (this.m_pairCount == this.m_pairBuffer.length)
+				if (that.m_pairCount == that.m_pairBuffer.length)
 				{
-					this.m_pairBuffer[this.m_pairCount] = new b2DynamicTreePair();
+					that.m_pairBuffer[that.m_pairCount] = new b2DynamicTreePair();
 				}
 				
-				var pair = this.m_pairBuffer[this.m_pairCount];
+				var pair = that.m_pairBuffer[that.m_pairCount];
 				pair.proxyA = proxy < queryProxy?proxy:queryProxy;
 				pair.proxyB = proxy >= queryProxy?proxy:queryProxy;
-				++this.m_pairCount;
+				++that.m_pairCount;
 				
 				return true;
 			}
diff --git a/javascript/Box2D/Dynamics/Contacts/b2ContactFactory.js b/javascript/Box2D/Dynamics/Contacts/b2ContactFactory.js
index 7cd147c..a464c59 100644
--- a/javascript/Box2D/Dynamics/Contacts/b2ContactFactory.js
+++ b/javascript/Box2D/Dynamics/Contacts/b2ContactFactory.js
@@ -4,6 +4,7 @@ this.__constructor.apply(this, arguments);
 }
 b2ContactFactory.prototype.__constructor = function(){}
 b2ContactFactory.prototype.__varz = function(){
+	this.InitializeRegisters()
 }
 // static methods
 // static attributes
diff --git a/javascript/Box2D/Dynamics/b2ContactManager.js b/javascript/Box2D/Dynamics/b2ContactManager.js
index b601fbf..dd5b875 100644
--- a/javascript/Box2D/Dynamics/b2ContactManager.js
+++ b/javascript/Box2D/Dynamics/b2ContactManager.js
@@ -105,7 +105,10 @@ b2ContactManager.prototype.AddPair = function (proxyUserDataA, proxyUserDataB) {
 		
 	}
 b2ContactManager.prototype.FindNewContacts = function () {
-		this.m_broadPhase.UpdatePairs(this.AddPair);
+		var that = this;
+		this.m_broadPhase.UpdatePairs(function(a,b){
+			return that.AddPair(a, b);
+			});
 	}
 b2ContactManager.prototype.Destroy = function (c) {
 		
